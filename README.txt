Tyler Beaupre
Final Project
WIP Demo: https://www.youtube.com/watch?v=qWcZOKZu9a4

This is a standard Unity project which when played, shows a tree growing from a seed.

The object which creates the tree is 'LSystemImplement'. It has a number of editable parameters including the total number of iterations, the number of iterations before a new branch occurs, and the change in pitch, roll and yaw.
The object which handles the timing is called 'Timer'. It iterates the L-System after a certain number of frames (Dt).

Symbol.cs - A symbol has a character, an age, and an id associated with it. The age property is only for variables, and the id is used to connect a certain symbol with a Stem.

SymbolString.cs - The equivalent of a string if it had an age and id for each character.

Rule.cs - A rule is an output SymbolString and an associated probability.

RuleSet.cs - A list of Rules associated with a certain symbol.

LSystem.cs - The actual L-System. Will calculate the string after a certain number of iterations, by applying the rules over and over again.

LSystemImplement.cs - This script acts as a bridge between the SymbolString generated by the LSystem and Unity. It creates the LSystem class by giving it a number of rules and parameters. Each iteration, it looks through the given
SymbolString and applies the different commands.

Stem.cs - This is the unity monobehavior which represents a single section of stem on the plant. It can add child segments, and update itself and its children.

Timer.cs - This script handles timing. After a certain number of frames it iterates the L-System.